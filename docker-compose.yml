services:
  # FastAPI сервис
  api:
    build:
      context: .
      dockerfile: code/deployment/api/Dockerfile
    container_name: art_api
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
    environment:
      - PYTHONPATH=/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  streamlit:
    build:
      context: .
      dockerfile: code/deployment/app/Dockerfile
    container_name: art_streamlit
    ports:
      - "8501:8501"
    depends_on:
      api:
        condition: service_healthy
    environment:
      - API_URL=http://api:8000
    restart: unless-stopped

  # Airflow сервисы
  airflow-webserver:
    image: apache/airflow:2.7.0
    container_name: airflow_webserver
    command: airflow webserver --port 8080
    ports:
      - "8080:8080"
    volumes:
      - ./services/airflow/dags:/opt/airflow/dags
      - ./code:/opt/airflow/code
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=false
      - _AIRFLOW_DB_UPGRADE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
    restart: unless-stopped

  airflow-scheduler:
    image: apache/airflow:2.7.0
    container_name: airflow_scheduler
    command: airflow scheduler
    volumes:
      - ./services/airflow/dags:/opt/airflow/dags
      - ./code:/opt/airflow/code
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    depends_on:
      - airflow-webserver
    restart: unless-stopped